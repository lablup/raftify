name: PyPI Deployment

on:
  push:
    tags:
      - "*"

jobs:
  release-linux-x86_64:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        target: ["x86_64"]
        manylinux: ["manylinux2014"]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout the source tree
        uses: actions/checkout@v4
      - name: Build the wheel
        uses: PyO3/maturin-action@v1
        env:
          PROTOC: /home/runner/.local/bin/protoc
        with:
          command: build
          args: --release -m binding/python/Cargo.toml -o dist -i python${{ matrix.python-version }}
          before-script-linux: |
            PB_REL="https://github.com/protocolbuffers/protobuf/releases"
            curl -LO $PB_REL/download/v23.2/protoc-23.2-linux-x86_64.zip
            unzip protoc-23.2-linux-x86_64.zip -d $HOME/.local
            export PATH="$PATH:$HOME/.local/bin"
          manylinux: ${{ matrix.manylinux }}
          target: ${{ matrix.target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-x86_64
          path: binding/python/dist

  release-linux-aarch64:
    runs-on: ubuntu-22.04-arm64
    strategy:
      fail-fast: false
      matrix:
        target: ["aarch64"]
        manylinux: ["manylinux2014"]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout the source tree
        uses: actions/checkout@v4
      - name: Build the wheel
        uses: PyO3/maturin-action@v1
        env:
          PROTOC: /home/runner/.local/bin/protoc
        with:
          command: build
          args: --release -m binding/python/Cargo.toml -o dist -i python${{ matrix.python-version }}
          before-script-linux: |
            sudo apt-get install -y unzip
            PB_REL="https://github.com/protocolbuffers/protobuf/releases"
            curl -LO $PB_REL/download/v23.2/protoc-23.2-linux-aarch_64.zip
            unzip protoc-23.2-linux-aarch_64.zip -d $HOME/.local
            export PATH="$PATH:$HOME/.local/bin"
          manylinux: ${{ matrix.manylinux }}
          target: ${{ matrix.target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-aarch64
          path: binding/python/dist

  release-macos:
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout the source tree
        uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          brew install protobuf
      - name: Build the wheel
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -m binding/python/Cargo.toml -o dist -i python${{ matrix.python-version }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: binding/python/dist

  release-source:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the source tree
        uses: actions/checkout@v4
      - name: Set up Python as Runtime
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Build the source distribution
        working-directory: binding/python
        run: |
          pip install -U pip setuptools
          pip install -U build
          python -m build --sdist binding/python
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-source
          path: binding/python/dist

  publish-to-pypi:
    needs: [release-linux-x86_64, release-linux-aarch64, release-macos, release-source]
    environment:
      name: deploy-to-pypi
      url: https://pypi.org/p/raftify
    permissions:
      id-token: write
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

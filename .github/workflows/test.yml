name: Integration Test

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Run Rust code lint
      run: |
        git submodule update --init
        cargo clippy --manifest-path=raftify/Cargo.toml -- -D warnings

  test-formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Run Rust code fomatter
      run: |
        git submodule update --init
        cargo fmt --check

  test-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install protobuf compiler
      run: |
        sudo apt install -y protobuf-compiler

    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build and Check Rust unit tests and integration tests all pass
      run: |
        git submodule update --init
        make build
        make unit-test
        make integration-test

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.4"

    - name: Build and Check Python integration tests all pass
      run: |
        cd ./binding/python
        pip3 install -r requirements.txt
        make install
        cd ./tests
        pip3 install -r requirements.txt
        make test
        cd ../../

  test-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies on Windows
        run: |
          choco install protoc
          rustup install stable
          rustup default stable

      - name: Build and Check Rust unit tests and integration tests all pass on Windows
        run: |
          git submodule update --init
          make build
          make unit-test
          make integration-test
